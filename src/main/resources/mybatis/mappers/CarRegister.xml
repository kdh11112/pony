<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  
<mapper namespace="kr.co.jhta.pony.dao.CarRegisterDAO">

	<cache
	  eviction="FIFO"
	  flushInterval="60000"
	  size="512"
	  readOnly="true"/>

	<insert id="insertCar" parameterType="kr.co.jhta.pony.dto.CarRegisterDTO">
		INSERT INTO CLIENT(clientVin,clientCarNumber,clientDistanceDriven,clientCarType,clientShipDate,clientProductionDate,clientColor,memberNo) VALUES(#{regCarDTO.clientVin},#{regCarDTO.clientCarNumber},#{regCarDTO.clientDistanceDriven},#{regCarDTO.clientCarType},#{regCarDTO.clientShipDate},#{regCarDTO.clientProductionDate},#{regCarDTO.clientColor},#{no})
	</insert>
	
	<insert id="insertClient" parameterType="kr.co.jhta.pony.dto.CarRegisterDTO">
		INSERT INTO MEMBER(memberEmail,memberName,memberPhone,memberPassword) VALUES(#{memberEmail},#{memberName},#{memberPhone},#{memberPassword})
	</insert>
	
	<select id="selectClientNo" resultType="int" parameterType="int">
		SELECT memberNo FROM MEMBER m ORDER BY memberNo DESC LIMIT 1
	</select>
	
	<select id="selectSearch" resultType="kr.co.jhta.pony.dto.CarRegisterDTO" parameterType="kr.co.jhta.pony.dto.CarRegisterDTO">
		SELECT clientVin, clientCarNumber, memberName
		FROM CLIENT c
		LEFT JOIN MEMBER m ON c.memberNo = m.memberNo
		  <where>
		    <if test="clientVin != null and clientVin != ''">
		      AND c.clientVin LIKE CONCAT('%', #{clientVin}, '%')
		    </if>
		    <if test="clientCarNumber != null and clientCarNumber != ''">
		      AND c.clientCarNumber LIKE CONCAT('%', #{clientCarNumber}, '%')
		    </if>
		    <if test="memberName != null and memberName != ''">
		      AND m.memberName LIKE CONCAT('%', #{memberName}, '%')
		    </if>
		  </where> 
	</select>
	
	<select id="selectRegRegistration" resultType="kr.co.jhta.pony.dto.CarRegisterDTO" parameterType="String">
		
			select * from(SELECT
			    c.clientVin,
			    clientCarNumber,
			    clientDistanceDriven,
			    clientCarType,
			    clientShipDate,
			    clientProductionDate,
			    clientColor,
			    memberName,
			    memberEmail,
			    memberPhone,
			    registrationClientRequests,
			    registrationSignificant,
			    registrationReservationDueDate,
			    registrationDate,
			    row_number() over(order by registrationDate desc) rowNum,
			    s.shopArea,
			    s.shopAreaPoint
			FROM CLIENT c LEFT JOIN MEMBER m 
			ON c.memberNo = m.memberNo 
			LEFT JOIN REGISTRATION r 
			ON c.clientVin = r.clientVin
			LEFT JOIN SHOP s 
			ON r.shopNo = s.shopNo
			LEFT JOIN MECHANIC m2 
			ON r.mechanicNo = m2.mechanicNo
			WHERE c.clientVin = #{clientVin}
			order by rowNum asc) aa
			GROUP by aa.clientVin


	</select>
	
	<select id="selectResMechanic" parameterType="kr.co.jhta.pony.dto.MechanicRegisterDTO" resultType="kr.co.jhta.pony.dto.MechanicRegisterDTO">
		SELECT  m.mechanicNo ,
				m.mechanicName 
		FROM MECHANIC m LEFT JOIN SHOP s 
		ON m.shopNo = s.shopNo 
		WHERE m.shopNo = #{word}
		<if test="mechanicNo != null and mechanicNo != ''">
		AND m.mechanicNo LIKE CONCAT('%', #{mechanicNo}, '%')
		</if>
		<if test="mechanicName != null and mechanicName != ''">
		AND m.mechanicName LIKE CONCAT('%', #{mechanicName}, '%')
		</if>
	</select>
	
	<insert id="insertRegAndcorr" parameterType="kr.co.jhta.pony.dto.CarRegisterDTO">
	LOCK TABLES REGISTRATION WRITE;
	INSERT INTO REGISTRATION(registrationClientRequests,registrationSignificant,mechanicNo,clientVin,shopNo,registrationDate) 
					VALUES(#{registrationClientRequests},#{registrationSignificant},#{mechanicNo},#{clientVin},#{shopNo},CONVERT_TZ(NOW(), '+00:00', '+09:00'));
	UNLOCK TABLES;
	</insert>
	
	<select id="selectRegAndcorrNumber" resultType="int">
		SELECT max(registrationNumber)+1 FROM REGISTRATION
	</select>
	
	<insert id="insertRegAndcorrRemain" parameterType="kr.co.jhta.pony.dto.HistroyDTO">
	LOCK TABLES HISTORY WRITE;
	INSERT INTO HISTORY (registrationNumber,clientCarNumber,memberName,clientDistanceDriven ,shopNo,shopArea,shopAreaPoint,mechanicName)
				VALUES(#{registrationNumber},#{clientCarNumber},#{memberName},#{clientDistanceDriven},#{shopNo},#{shopArea},#{shopAreaPoint},#{mechanicName});
	UNLOCK TABLES;
	</insert>
	
	<update id="updatesaveApproval" parameterType="kr.co.jhta.pony.dto.CarRegisterDTO" >
			UPDATE HISTORY h
			JOIN REGISTRATION r ON h.registrationNumber = r.registrationNumber
			set h.technologyNumber = #{histroyDTO.technologyNumber} , h.technologyDetail = #{histroyDTO.technologyDetail} , h.technologyPrice = #{histroyDTO.technologyPrice} , h.technologyCount = #{histroyDTO.technologyCount},
				h.partNumber =#{histroyDTO.partNumber} , h.partName = #{histroyDTO.partName} , h.partPrice = #{histroyDTO.partPrice} , h.partCount = #{histroyDTO.partCount}
			WHERE r.registrationNumber = #{registrationNumber}
			AND DATE(r.registrationDate) = #{registrationDate}
	</update>
	
	<insert id="insertPartApproval" parameterType="kr.co.jhta.pony.dto.CarRegisterDTO">
		INSERT INTO HISTORY (registrationNumber,partNumber,partName,partPrice,partCount) VALUES(#{registrationNumber},#{DTO.partNumber},#{DTO.partName},#{DTO.partPrice},#{DTO.partCount})
	</insert>
	
	<insert id="insertPartApprovalList" parameterType="map">
		INSERT INTO HISTORY (registrationNumber,partNumber,partName,partPrice,partCount) 
		VALUES
		<foreach collection="partList" item="part" separator=",">
		(#{registrationNumber},#{part.partNumber},#{part.partName},#{part.partPrice},#{part.partCount})
		</foreach>
	</insert>
	
	<insert id="insertTechApproval" parameterType="kr.co.jhta.pony.dto.CarRegisterDTO">
		INSERT INTO HISTORY (registrationNumber,technologyNumber,technologyDetail,technologyPrice,technologyCount) VALUES (#{registrationNumber},#{DTO.technologyNumber},#{DTO.technologyDetail},#{DTO.technologyPrice},#{DTO.technologyCount})
	</insert>
	
	<update id="updatePart" parameterType="kr.co.jhta.pony.dto.HistroyDTO">
		UPDATE PART p
		JOIN HISTORY h on p.partNumber = h.partNumber
		SET p.partNo = p.partNo - #{partCount}
		WHERE h.partNumber = #{partNumber}
	</update>
	
	<update id="updateRegAndEditOne" parameterType="kr.co.jhta.pony.dto.CarRegisterDTO">
		UPDATE HISTORY h 
		JOIN REGISTRATION r ON h.registrationNumber = r.registrationNumber
		JOIN CLIENT c ON c.clientVin = r.clientVin
		JOIN `MEMBER` m ON m.memberNo = c.memberNo
			SET h.clientCarNumber = #{clientCarNumber},
				h.clientDistanceDriven = #{clientDistanceDriven},
				h.memberName = #{memberName},
				m.memberPhone = #{memberPhone},
				r.mechanicNo = #{mechanicNo},
				h.mechanicName = #{mechanicName},
				r.registrationClientRequests = #{registrationClientRequests},
			    r.registrationSignificant = #{registrationSignificant}
		WHERE r.registrationNumber = #{registrationNumber}
		AND DATE(r.registrationDate) = #{registrationDate}
	</update>
	<update id="updateRegAndEditTwo" parameterType="kr.co.jhta.pony.dto.CarRegisterDTO">
		UPDATE HISTORY h 
		JOIN REGISTRATION r ON h.registrationNumber = r.registrationNumber
		JOIN CLIENT c ON c.clientVin = r.clientVin
		JOIN `MEMBER` m ON m.memberNo = c.memberNo
			SET c.clientCarNumber = #{clientCarNumber},	
				c.clientDistanceDriven = #{clientDistanceDriven},		
				m.memberName = #{memberName}
		WHERE r.registrationNumber = #{registrationNumber}
		AND DATE(r.registrationDate) = #{registrationDate}
	</update>
	
	
	
	<select id="selectResNum" parameterType="kr.co.jhta.pony.dto.CarRegisterDTO" resultType="kr.co.jhta.pony.dto.CarRegisterDTO">
		SELECT * 
		FROM (select row_number() over(order by registrationDate asc) registrationRN,
					r.registrationNumber,
					r.clientVin, 
					h.clientCarNumber,
					c.clientCarType,
					c.clientColor,
					r.registrationDate,
					h.clientDistanceDriven,
					c.clientShipDate,
					r.registrationReservationDueDate,
					h.memberName,
					m.memberPhone,
					r.mechanicNo,
					h.mechanicName,
					h.shopArea,
					h.shopAreaPoint,
					registrationClientRequests,
					registrationSignificant,
					c.clientProductionDate
				from REGISTRATION r left join HISTORY h
				on r.registrationNumber = h.registrationNumber 
				left join CLIENT c 
				on r.clientVin = c.clientVin
				left join `MEMBER` m 
				on c.memberNo  = m.memberNo
				WHERE DATE(registrationDate) = #{registrationDate}
				group by registrationNumber) s
		WHERE registrationRN = #{registrationRN} 
	</select>
	
	
	<select id="selectRegistrationChiceMechanicInput" resultType="kr.co.jhta.pony.dto.MechanicRegisterDTO" parameterType="int">
		select mechanicNo ,mechanicName  from MECHANIC m 
		WHERE mechanicNo = #{mechanicNo}
	</select>
	
	<select id="selectRegistrationTodayCases" resultType="kr.co.jhta.pony.dto.CarRegisterDTO" parameterType="int">
	    SELECT
	        COUNT(registrationNumber) AS registrationNumber
	    FROM
	        REGISTRATION
	    WHERE
	        DATE(registrationDate) = DATE(CONVERT_TZ(NOW(), '+00:00', '+09:00'))
	</select>
	
	<select id="selectReg" parameterType="kr.co.jhta.pony.dto.CarRegisterDTO" resultType="kr.co.jhta.pony.dto.CarRegisterDTO" useCache="true">
		SELECT * 
		FROM (select row_number() over(order by registrationDate asc) registrationRN,
					r.registrationNumber,
					r.clientVin, 
					h.clientCarNumber,
					r.registrationDate,
					h.memberName,
					t.technologyNumber,
					t.technologyDetail,
					t.technologyPrice,
					p.partNumber,
					p.partName,
					p.partNo,
					p.partPrice,
					r.mechanicNo,
					h.clientDistanceDriven,
					h.mechanicName 
				from REGISTRATION r left join HISTORY h
				on r.registrationNumber = h.registrationNumber
				left join TECHNOLOGY t 
				on h.technologyNumber = t.technologyNumber 
				left join PART p 
				on h.partNumber = p.partNumber
				WHERE DATE(registrationDate) = #{registrationDate}
				group by registrationNumber
				) s
		WHERE registrationRN = #{registrationRN} 
	</select>
	
	
	<select id="selectPaymentList" parameterType="kr.co.jhta.pony.dto.HistroyDTO" resultType="kr.co.jhta.pony.dto.HistroyDTO" useCache="true">
			SELECT *, ROW_NUMBER() OVER(ORDER BY historyNo ASC) historyRN
				FROM (
					SELECT
						historyNo,
						registrationNumber,
						technologyNumber,
						technologyDetail,
						technologyPrice,
						technologyCount,
						partNumber,
						partName,
						partPrice,
						partCount
					FROM HISTORY h 
					WHERE registrationNumber = #{registrationNumber}
				) AS ss
			WHERE technologyNumber != '' OR partNumber != ''
	</select>
	<!-- 정비예약내역 가져오기 -->
<!-- 	<select id="getCarRegistrationList">
		SELECT
		r.registrationNumber,
		r.registrationClientRequests,
		c.clientCarNumber,
		c.clientDistanceDriven,
		c.clientCarType,
		s.shopAreaPoint,
		r.registrationReservationDueDate,
		r.registrationDate
		FROM REGISTRATION r
		JOIN CLIENT c ON r.clientVin = c.clientVin
		JOIN
		MEMBER m ON c.memberNo = m.memberNo
		JOIN SHOP s ON r.shopNo = s.shopNo
		WHERE m.memberNo = #{memberNo};
	</select> -->
	<!-- 정비예약내역 삭제 -->
	<!-- <delete id="deleteCarRegister" parameterType="int">
		DELETE FROM REGISTRATION
		WHERE registrationNumber = #{registrationNumber}
	</delete> -->

</mapper>